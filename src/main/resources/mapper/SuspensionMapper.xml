<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbsy.student.mapper.SuspensionMapper">
  <resultMap id="BaseResultMap" type="com.dbsy.student.pojo.Suspension">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="student_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="suspension_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="resumption_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="duration" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reason" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="remarks" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.dbsy.student.pojo.Suspension">
    insert into suspension (id, student_id, suspension_date,
      resumption_date, duration, reason,
      remarks)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{suspensionDate,jdbcType=DATE},
      #{resumptionDate,jdbcType=DATE}, #{duration,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR},
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dbsy.student.pojo.Suspension">
    insert into suspension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="suspensionDate != null">
        suspension_date,
      </if>
      <if test="resumptionDate != null">
        resumption_date,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="suspensionDate != null">
        #{suspensionDate,jdbcType=DATE},
      </if>
      <if test="resumptionDate != null">
        #{resumptionDate,jdbcType=DATE},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <select id="listStu" resultType="com.dbsy.student.pojo.Student">
    select * from student
    <where>
       isDel=0
      <if test="departmentId != null and departmentId != 0">
        and department_id= #{departmentId}
      </if>
      <if test="majorId != null and majorId != 0">
        and major_id= #{majorId}
      </if>
      <if test="grade != null and grade != 0">
        and grade= #{grade}
      </if>
      <if test="clazzId != null and clazzId != 0">
        and clazz_id= #{clazzId}
      </if>

      <if test="search != null">
        and name like CONCAT('%',#{search},'%')
      </if>

      <if test="abbrName != null">
        and abbr_name like CONCAT('%',#{abbrName},'%')
      </if>

      <if test="search != null">
        or number =#{search}
      </if>


    </where>
    <if test="start !=null and end != null">
      limit #{start},#{end}
    </if>

  </select>


  <select id="list" resultType="HashMap">
    select su.id as id, student_id studentId,s.number as number, s.name as name, s.department_id as departmentId, s.major_id
    as majorId,s.clazz_id as clazzId, su.suspension_date as suspensionDate, su.duration as duration,
    su.reason as reason, su.resumption_date as resumptionDate, su.remarks as remarks
    from suspension su join student s on s.id = su.student_id
    <where>
        s.isDel = 1
      <if test="departmentId != null and departmentId != 0">
        and department_id=#{departmentId}
      </if>

      <if test="majorId != null and majorId != 0">
        and major_id=#{majorId}
      </if>

      <if test="clazzId != null and clazzId != 0">
        and clazz_id=#{clazzId}
      </if>

      <if test="grade != null and grade != 0">
        and grade=#{grade}
      </if>
      <if test="search != null">
        and s.name like CONCAT('%',#{search},'%')
      </if>
      <if test="abbrName != null">
        and s.abbr_name like CONCAT('%',#{abbrName},'%')
      </if>
      <if test="search != null">
        or number=#{search}
      </if>
    </where>
    <if test="start !=null and end != null">
      limit #{start},#{end}
    </if>
  </select>


  <select id="listDropSchool" resultType="HashMap">
    select * from student
    <where>
      isDel = 2
      <if test="departmentId != null and departmentId != 0">
        and department_id=#{departmentId}
      </if>

      <if test="majorId != null and majorId != 0">
        and major_id=#{majorId}
      </if>

      <if test="clazzId != null and clazzId != 0">
        and clazz_id=#{clazzId}
      </if>

      <if test="grade != null and grade != 0">
        and grade=#{grade}
      </if>
      <if test="search != null">
        and name like CONCAT('%',#{search},'%')
      </if>
      <if test="search != null">
        or number=#{search}
      </if>
    </where>
    <if test="start !=null and end != null">
      limit #{start},#{end}
    </if>
  </select>




  <select id="getSuspension" resultType="HashMap">
    SELECT stu.id studentId,stu.`name` stuName,stu.number number,dp.`name` dpName,mj.`name` mjName,cl.`name`clName FROM student stu LEFT JOIN department dp ON  stu.department_id=dp.id LEFT JOIN major mj on stu.major_id=mj.id LEFT JOIN clazz cl ON stu.clazz_id=cl.id
  </select>

  <select id="getSelf" resultType="HashMap">
    SELECT  s.id id,s.duration duration, s.reason reason,s.remarks remarks,s.resumption_date resumptionDate,s.suspension_date suspensionDate,stu.`name` name,stu.number number,stu.id studentId,stu.grade grade, dp.`name` dpName,mj.`name` mjName,cl.`name` clName FROM suspension s LEFT JOIN student  stu ON stu.id=s.student_id LEFT JOIN department dp ON  stu.department_id=dp.id LEFT JOIN major mj ON mj.id=stu.major_id LEFT JOIN clazz cl ON cl.id=stu.clazz_id where s.id=#{id}
  </select>
  <select id="getByText" resultType="HashMap">
--         SELECT s.id id, student_id studentId, stu.`name` stuName,stu.number number,dp.`name` dpName,mj.`name` mjName,cl.`name`clName,s.duration duration, s.reason reason,s.remarks remarks,s.resumption_date resumptionDate,s.suspension_date suspensionDate from student stu LEFT JOIN suspension s ON s.student_id=stu.id LEFT JOIN department dp ON  stu.department_id=dp.id LEFT JOIN major mj on stu.major_id=mj.id LEFT JOIN clazz cl ON stu.clazz_id=cl.id
    SELECT stu.id studentId,stu.`name` stuName,stu.number number,dp.`name` dpName,mj.`name` mjName,cl.`name`clName FROM student stu LEFT JOIN department dp ON  stu.department_id=dp.id LEFT JOIN major mj on stu.major_id=mj.id LEFT JOIN clazz cl ON stu.clazz_id=cl.id
    <where>
          stu.isDel = 0  and
          (<if test="text !=null">
             stu.`name` LIKE CONCAT('%',#{text},'%')
          </if>
          <if test="text != null">
            or stu.number = #{text}
          </if>)
        </where>
  </select>


  <select id="listCount" resultType="int">
    select count(*) from suspension su join student s on s.id = su.student_id
    <where>
      <if test="departmentId != null and departmentId != 0">
        and department_id=#{departmentId}
      </if>

      <if test="majorId != null and majorId != 0">
        and major_id=#{majorId}
      </if>

      <if test="clazzId != null and clazzId != 0">
        and clazz_id=#{clazzId}
      </if>

      <if test="grade != null and grade != 0">
        and grade=#{grade}
      </if>
      <if test="search_key != null">
        and s.name like CONCAT('%',#{search},'%')
      </if>
      <if test="abbrName != null">
        and s.abbr_name like CONCAT('%',#{abbrName},'%')
      </if>
      <if test="search != null">
        or number=#{search}
      </if>

    </where>
  </select>

  <select id="listCountStu" resultType="int">
    select count(*) from student
    <where>
        isDel = 0
      <if test="departmentId != null and departmentId != 0">
        and department_id=#{departmentId}
      </if>

      <if test="majorId != null and majorId != 0">
        and major_id=#{majorId}
      </if>

      <if test="clazzId != null and clazzId != 0">
        and clazz_id=#{clazzId}
      </if>

      <if test="grade != null and grade != 0">
        and grade=#{grade}
      </if>

      <if test="search != null">
        and name like CONCAT('%',#{search},'%')
      </if>
      <if test="abbrName != null">
        and abbr_name like CONCAT('%',#{abbrName},'%')
      </if>
      <if test="search != null">
        or number=#{search}
      </if>
    </where>
  </select>



  <select id="listCountDrop" resultType="int">
    select count(*) from student
    <where>
      isDel = 2
      <if test="departmentId != null and departmentId != 0">
        and department_id=#{departmentId}
      </if>

      <if test="majorId != null and majorId != 0">
        and major_id=#{majorId}
      </if>

      <if test="clazzId != null and clazzId != 0">
        and clazz_id=#{clazzId}
      </if>

      <if test="grade != null and grade != 0">
        and grade=#{grade}
      </if>

      <if test="search != null">
        and name like CONCAT('%',#{search},'%')
      </if>
      <if test="search != null">
        or number=#{search}
      </if>
    </where>
  </select>

  <!--批量增加-->
  <insert id="batchInsert" parameterType="java.util.List">
    insert into suspension (id, student_id, suspension_date, resumption_date,duration,reason,
    remarks)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.studentId,jdbcType=INTEGER}, #{item.suspensionDate,jdbcType=INTEGER},#{item.resumptionDate,jdbcType=FLOAT},
      #{item.duration,jdbcType=INTEGER}, #{item.reason,jdbcType=INTEGER},#{item.remarks,jdbcType=INTEGER}}
      )
    </foreach>
  </insert>


  <delete id="batchRemove">
    delete from suspension where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>