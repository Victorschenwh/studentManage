<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbsy.student.mapper.RewardMapper">
    <insert id="insert" parameterType="com.dbsy.student.pojo.Reward">
    insert into reward (id, student_id, synopsis, 
      score,study_term)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{synopsis,jdbcType=VARCHAR}, 
      #{score},#{studyTerm})
  </insert>
    <insert id="insertSelective" parameterType="com.dbsy.student.pojo.Reward">
        insert into reward
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="synopsis != null">
                synopsis,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="studyTerm != null">
                study_term,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="synopsis != null">
                #{synopsis,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score},
            </if>
            <if test="studyTerm != null">
                #{studyTerm},
            </if>
        </trim>
    </insert>

    <!--批量增加-->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into reward (id, student_id, synopsis, score,study_term)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=INTEGER}, #{item.studentId,jdbcType=INTEGER},
            #{item.synopsis,jdbcType=VARCHAR}, #{item.score},#{item.studyTerm})
        </foreach>
    </insert>

    <delete id="batchRemove">
        delete from reward where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>



    <select id="list" resultType="Map" parameterType="Map">
        select * from view_stu_reward
        <where>
            <if test="departmentId != null and departmentId != 0">
                and department_id = #{departmentId}
            </if>
            <if test="majorId!=null and majorId!=0">
                and major_id = #{majorId}
            </if>
            <if test="grade!=null and grade!=0">
                and grade = #{grade}
            </if>
            <if test="clazzId!=null and clazzId!=0">
                and clazz_id = #{clazzId}
            </if>
            <if test="studyTerm!=null">
                and study_term = #{studyTerm}
            </if>

            <if test="abbrName != null">
                and abbr_name like CONCAT('%',#{abbrName},'%')
            </if>
            <if test="number != null">
                and number like CONCAT('%',#{number},'%')
            </if>
            <if test="name != null">
                and name like CONCAT('%',#{name},'%')
            </if>
        </where>
        <if test="start!=null">
            limit #{start},#{pageSize}
        </if>
    </select>

    <select id="listCount" resultType="int" parameterType="Map">
        select count(*) from view_stu_reward
        <where>
            <if test="departmentId != null and departmentId != 0">
                and department_id = #{departmentId}
            </if>
            <if test="majorId!=null and majorId!=0">
                and major_id = #{majorId}
            </if>
            <if test="grade!=null and grade!=0">
                and grade = #{grade}
            </if>
            <if test="clazzId!=null and clazzId!=0">
                and clazz_id = #{clazzId}
            </if>
            <if test="studyTerm!=null">
                and study_term = #{studyTerm}
            </if>

            <if test="abbrName != null">
                and abbr_name like CONCAT('%',#{abbrName},'%')
            </if>
            <if test="number != null">
                and number like CONCAT('%',#{number},'%')
            </if>
            <if test="name != null">
                and name like CONCAT('%',#{name},'%')
            </if>
        </where>

    </select>


</mapper>