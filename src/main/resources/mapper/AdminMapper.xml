<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dbsy.student.mapper.AdminMapper">

    <select id="findAssistantCount" parameterType="Map" resultType="int">
        select count(*) from admin where role > 2000
        <where>
            <if test="departmentId != null and departmentId != 0">
                and department_id = #{departmentId}
            </if>
        </where>
    </select>

    <select id="findAssistant" parameterType="Map" resultType="Map">
        select * from admin where role > 2000
        <where>
            <if test="departmentId != null and departmentId != 0">
                and department_id = #{departmentId}
            </if>
        </where>
        <!--<if test="start!=null">-->
            <!--limit #{start},#{pageSize}-->
        <!--</if>-->
    </select>


    <select id="findDepartLeaderCount" parameterType="Map" resultType="int">
        select count(*) from admin where role = 20
    </select>

    <select id="findDepartLeader" parameterType="Map" resultType="Map">
        select * from admin where role = 20
        <!--<if test="start!=null">-->
            <!--limit #{start},#{pageSize}-->
        <!--</if>-->
    </select>


    <select id="findSchoolLeaderCount" parameterType="Map" resultType="int">
        select count(*) from admin where role = 10
    </select>

    <select id="findSchoolLeader" parameterType="Map" resultType="Map">
        select * from admin where role = 10
        <!--<if test="start!=null">-->
            <!--limit #{start},#{pageSize}-->
        <!--</if>-->
    </select>


    <select id="findAdmin" parameterType="Map" resultType="Map">
        select a.*,s.* from
        (select * from admin where role=40) a left join student s on a.foreign_id=s.id
        <where>
            <if test="departmentId != null and departmentId != 0">
                and s.department_id = #{departmentId}
            </if>
            <if test="majorId!=null and majorId!=0">
                and s.major_id = #{majorId}
            </if>
            <if test="grade!=null and grade!=0">
                and s.grade = #{grade}
            </if>
            <if test="clazzId!=null and clazzId!=0">
                and s.clazz_id = #{clazzId}
            </if>

            <if test="abbrName != null">
                and abbr_name like CONCAT('%',#{abbrName},'%')
            </if>
            <if test="number != null">
                and number like CONCAT('%',#{number},'%')
            </if>
            <if test="name != null">
                and name like CONCAT('%',#{name},'%')
            </if>
        </where>
        <if test="start!=null">
            limit #{start},#{pageSize}
        </if>
    </select>

    <select id="findAdminCount" parameterType="Map" resultType="int">
        select count(*) from
        (select * from admin where role=40) a left join student s on a.foreign_id=s.id
        <where>
            <if test="departmentId != null and departmentId != 0">
                and s.department_id = #{departmentId}
            </if>
            <if test="majorId!=null and majorId!=0">
                and s.major_id = #{majorId}
            </if>
            <if test="grade!=null and grade!=0">
                and s.grade = #{grade}
            </if>
            <if test="clazzId!=null and clazzId!=0">
                and s.clazz_id = #{clazzId}
            </if>

            <if test="abbrName != null">
                and abbr_name like CONCAT('%',#{abbrName},'%')
            </if>
            <if test="number != null">
                and number like CONCAT('%',#{number},'%')
            </if>
            <if test="name != null">
                and name like CONCAT('%',#{name},'%')
            </if>
        </where>
    </select>

    <update id="update" parameterType="com.dbsy.student.pojo.Admin">
        update admin
        <set>
            <if test="username != null">
                username=#{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password=#{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname=#{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                phone_number=#{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email=#{email,jdbcType=VARCHAR},
            </if>
            <if test="isLock != null">
                is_lock=#{isLock,jdbcType=BIT},
            </if>
            <if test="foreignId != null">
                foreign_id=#{foreignId},
            </if>
            <if test="role != null">
                role=#{role},
            </if>
            <if test="departmentId != null">
                department_id=#{departmentId},
            </if>
        </set>
        where id=#{id}
    </update>

    <insert id="insert" parameterType="com.dbsy.student.pojo.Admin" useGeneratedKeys="true"
            keyProperty="id">
    insert into admin (id, username, password, 
      nickname, phone_number, email, 
      is_lock,foreign_id,role,department_id)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{isLock,jdbcType=BIT},#{foreignId},#{role},#{departmentId})
  </insert>
    <insert id="insertSelective" parameterType="com.dbsy.student.pojo.Admin" useGeneratedKeys="true"
            keyProperty="id">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="isLock != null">
                is_lock,
            </if>

            <if test="foreignId != null">
                foreign_id,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isLock != null">
                #{isLock,jdbcType=BIT},
            </if>
            <if test="foreignId != null">
                #{foreignId},
            </if>
            <if test="role != null">
                #{role},
            </if>
            <if test="departmentId != null">
                #{departmentId},
            </if>
        </trim>
    </insert>

</mapper>